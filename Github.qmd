---
title: "Git & Github"
subtitle: "MSBA Capstone"
format: 
  revealjs:
    logo: Accessibility DESB.png
    scrollable: true
    incremental: true
    footer: "https://github.com/jefftwebb/github_class.git"
    
---

## Problem {.smaller}

The fear of losing  work inevitably leads to file redundancy and proliferation. Have you ever had a project folder that looks like this? (Be honest.)

mod 1.R

model 2-replacing mod 1.R

model 3.R

modl 4.R

model 5.R

Model 6.R

model 6.1.R

model 6.1 Final.txt

Final model.Rmd.Rmd

final final model.Rmd

- Now imagine that 3 or 4 people are contributing files to such a folder. *Chaos*!

## Solution: Git

- Git is a version control system that resides on your computer.

- Git manages the evolution of a set of files --called a repository or "repo"--- in a sane, highly structured way.

- It helps you keep track of changes to documents and, if necessary, rewind a project back to an earlier version.

## Solution: GitHub

- Github is a remote hosting service that facilitates collaboration. 

- It provides a home for  Git-based projects on the internet (think of it as DropBox but much better).  

- Github acts as a distribution channel or clearinghouse for your Git-managed projects, allowing other people to see your stuff, sync up with you, and perhaps even make changes. 

## Github as Online Portfolio

- "Allows other people to see your stuff."  In this respect Github  also  can function as an online portfolio.

- That is why we are in discussing github in capstone.

- **You need to begin developing a portfolio of work now.**

- Many employers would like applicants to discuss project-specific examples in technical interviews. 

- A GitHub repo is a perfect place to keep that work.(You could even include a link to your github repo on your résumé.)

## Tonights Agenda

- Get set up with GitHub and start a repo 
- Manually upload your resume 
- Install git on your computer
- Integrate local git with github using RStudio (hopefully)

## Get set up with Github

- Go to:  [https://github.com/signup](https://github.com/signup){preview-link="true" style="text-align: center"}

## Start a Github Repo

- [https://github.com](https://github.com){preview-link="true" style="text-align: center"}
- Click on "new" in upper left
- Title your repo
- Add a description
- Select gitignore = R
- Upload file: Find "Add File" >> "Upload file"
- Navigate to your resume on your computer and upload.
- Done!  You now have your résumé in a public location.
- Click "Code" >> HTTPS.  Write down this url for use later.

## Install Git on your Computer

- google search: "install git" >> "Downloads - Git SCM" 

- [https://git-scm.com/downloads](https://git-scm.com/downloads){preview-link="true" style="text-align: center"}

## RStudio + Projects 

- Open Rstudio on your computer.  
- Notice the tab that now appears in the upper right:  Git.
- Select "New Project" in upper right
- Version Control >> Git >> Project repository URL (use the url you wrote down earlier from github)
- Give your project a name
- Creating a project keeps everything together---code, data, etc---that is part of an analysis. This does nothing more than create a folder in the location of your choice on your hard drive. 

## RStudio + Github 

Click the git tab in the upper right. From here you can do version control.  Note this is local to your computer! You can easily do version control using git with pushing changes to Github's remote repository.


To push changes to Github you must take extra steps:

```{r}
#| echo: true
#| eval: false

# install packages
install.packages("usethis")
install.packages("credentials")
install.packages("gitcreds")

# load packages
library(usethis)
library(credentials) 
library(gitcreds)

# create credentials
usethis::use_git_config(user.name = "Jeff Webb", user.email = "jeff.webb@utah.edu")
usethis::create_github_token() # This will take you to github.  Follow the prompts and copy the access token.
gitcreds::gitcreds_set() # Type the appropriate selection and then enter new token
```

- Create a new file in RStudio
- Click the Git tab in the upper right.
- Find your new file and click the box to the left.
- Click "commit." This will open a new window.
- Enter a commit message ("initial commit"), click "commit."
- Click "push."  This *should* push changes to to your linked Github repo.
- Go to your Github repo and verify that it worked.

## How to use Github

- Use Github as a public portfolio to be shared with the world!
  - Store your updated résumé. (Better yet figure out how to make a snazzy resume with RMarkdown, and, as you update it with new information, push those changes to Github for automatic publication. See the `pagedown` package, or the `vitae` package.)
  - Publish project code and analyses, along with associated presentations and papers. This material will substantiate your abilities for employers.

